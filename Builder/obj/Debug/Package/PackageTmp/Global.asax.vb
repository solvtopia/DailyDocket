Imports System.Web.SessionState

Public Class Global_asax
    Inherits System.Web.HttpApplication

    Sub Application_Start(ByVal sender As Object, ByVal e As EventArgs)
        ' Fires when the application is started
    End Sub

    Sub Session_Start(ByVal sender As Object, ByVal e As EventArgs)
        ' Fires when the session is started
    End Sub

    Sub Application_BeginRequest(ByVal sender As Object, ByVal e As EventArgs)
        ' Fires at the beginning of each request
        If Not HttpContext.Current.Request.IsSecureConnection AndAlso Not HttpContext.Current.Request.IsLocal Then
            Response.Redirect("https://" + Request.ServerVariables("HTTP_HOST") + HttpContext.Current.Request.RawUrl)
        End If
    End Sub

    Sub Application_AuthenticateRequest(ByVal sender As Object, ByVal e As EventArgs)
        ' Fires upon attempting to authenticate the use
    End Sub

    Sub Application_Error(ByVal sender As Object, ByVal e As EventArgs)
        ' Fires when an error occurs
        ' Code that runs when an unhandled error occurs

        ' Get the exception object.
        Dim ex As Exception = Server.GetLastError

        ' Handle HTTP errors (avoid trapping HttpUnhandledException
        ' which is generated when a non-HTTP exception 
        ' such as the ones generated by buttons 1-3 in 
        ' Default.aspx is not handled at the page level).
        If (ex.GetType Is GetType(HttpException)) Then
            ' The Complete Error Handling Example generates
            ' some errors using URLs with "NoCatch" in them;
            ' ignore these here to simulate what would happen
            ' if a global.asax handler were not implemented.
            If ex.Message.Contains("NoCatch") Or ex.Message.Contains("maxUrlLength") Then
                Return
            End If

            'Redirect HTTP errors to HttpError page
            ex.WriteToErrorLog(New ErrorLogEntry(App.CurrentUser.ID, App.CurrentClient.ID, Enums.ProjectName.Builder))
        End If

        ' For other kinds of errors give the user some information
        ' but stay on the default page
        ex.WriteToErrorLog(New ErrorLogEntry(App.CurrentUser.ID, App.CurrentClient.ID, Enums.ProjectName.Builder))

        ' Clear the error from the server
        Server.ClearError()
    End Sub

    Sub Session_End(ByVal sender As Object, ByVal e As EventArgs)
        ' Fires when the session ends
    End Sub

    Sub Application_End(ByVal sender As Object, ByVal e As EventArgs)
        ' Fires when the application ends
    End Sub

End Class